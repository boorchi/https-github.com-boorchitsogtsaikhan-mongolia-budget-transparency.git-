{"version":3,"sources":["./src/app/pages/budget-dashboard/budget-dashboard.component.ts","./src/app/pages/budget-dashboard/budget-dashboard.component.html","./src/app/pages/budget-dashboard/budget-dashboard.module.ts"],"names":[],"mappings":"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","file":"pages-budget-dashboard-budget-dashboard-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BackendService, BudgetData, DashboardStats, IndicatorData } from '../../services/backend.service';\n\n@Component({\n  selector: 'app-budget-dashboard',\n  templateUrl: './budget-dashboard.component.html',\n  styleUrls: ['./budget-dashboard.component.scss']\n})\nexport class BudgetDashboardComponent implements OnInit {\n  loading = false;\n  backendConnected = false;\n  budgetData: BudgetData[] = [];\n  revenueData: BudgetData[] = [];\n  indicatorsData: IndicatorData[] = [];\n  dashboardStats: DashboardStats | null = null;\n  aggregatedData: any[] = [];\n  selectedYear = new Date().getFullYear();\n  selectedCategory = '';\n  selectedMinistry = '';\n  selectedIndicatorCategory = '';\n\n  // Available filter options\n  availableYears = [2025, 2024, 2023, 2022, 2021];\n  availableCategories = [\n    { key: 'education', name: 'Боловсрол' },\n    { key: 'health', name: 'Эрүүл мэнд' },\n    { key: 'infrastructure', name: 'Дэд бүтэц' },\n    { key: 'defense', name: 'Батлан хамгаалах' },\n    { key: 'social', name: 'Нийгмийн хамгаалал' },\n    { key: 'environment', name: 'Байгаль орчин' },\n    { key: 'agriculture', name: 'Хөдөө аж ахуй' },\n    { key: 'tourism', name: 'Аялал жуулчлал' },\n    { key: 'culture', name: 'Соёл урлаг' },\n    { key: 'transport', name: 'Тээвэр харилцаа' }\n  ];\n\n  availableIndicatorCategories = [\n    { key: 'economic', name: 'Эдийн засаг' },\n    { key: 'social', name: 'Нийгэм' },\n    { key: 'fiscal', name: 'Төсөв санхүү' },\n    { key: 'environmental', name: 'Байгаль орчин' },\n    { key: 'governance', name: 'Засаглал' }\n  ];\n\n  constructor(\n    public backendService: BackendService\n  ) {}\n\n  async ngOnInit() {\n    await this.checkBackendConnection();\n    if (this.backendConnected) {\n      await this.loadDashboardData();\n    }\n  }\n\n  /**\n   * Check if backend is available\n   */\n  async checkBackendConnection() {\n    try {\n      this.backendConnected = await this.backendService.checkBackendConnection();\n      console.log('Backend connection status:', this.backendConnected);\n    } catch (error) {\n      console.error('Backend connection check failed:', error);\n      this.backendConnected = false;\n    }\n  }\n\n  /**\n   * Load all dashboard data\n   */\n  async loadDashboardData() {\n    this.loading = true;\n    \n    try {\n      // Load dashboard statistics\n      this.dashboardStats = await this.backendService.getDashboardStats();\n      \n      // Load budget data (expenditure)\n      await this.loadBudgetData();\n      \n      // Load revenue data\n      await this.loadRevenueData();\n      \n      // Only load indicators if backend is connected\n      if (this.backendConnected) {\n        await this.loadIndicatorsData();\n      }\n      \n      // Load aggregated data\n      this.aggregatedData = await this.backendService.getBudgetAggregates('category');\n      \n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Load budget data based on current filters\n   */\n  async loadBudgetData() {\n    try {\n      if (this.selectedCategory) {\n        this.budgetData = await this.backendService.getBudgetDataByCategory(this.selectedCategory);\n      } else if (this.selectedMinistry) {\n        this.budgetData = await this.backendService.getBudgetDataByMinistry(this.selectedMinistry);\n      } else {\n        this.budgetData = await this.backendService.getBudgetDataByYear(this.selectedYear);\n      }\n    } catch (error) {\n      console.error('Error loading budget data:', error);\n      this.budgetData = [];\n    }\n  }\n\n  /**\n   * Load revenue data based on current filters\n   */\n  async loadRevenueData() {\n    try {\n      this.revenueData = await this.backendService.getRevenueDataByYear(this.selectedYear);\n    } catch (error) {\n      console.error('Error loading revenue data:', error);\n      this.revenueData = [];\n    }\n  }\n\n  /**\n   * Load indicators data based on current filters\n   */\n  async loadIndicatorsData() {\n    try {\n      if (this.selectedIndicatorCategory) {\n        this.indicatorsData = await this.backendService.getIndicatorsByCategory(this.selectedIndicatorCategory);\n      } else {\n        this.indicatorsData = await this.backendService.getIndicatorsByYear(this.selectedYear);\n      }\n    } catch (error) {\n      console.error('Error loading indicators data:', error);\n      this.indicatorsData = [];\n    }\n  }\n\n  /**\n   * Handle year filter change\n   */\n  async onYearChange(year: number) {\n    this.selectedYear = year;\n    this.selectedCategory = '';\n    this.selectedMinistry = '';\n    this.selectedIndicatorCategory = '';\n    this.loading = true;\n    await this.loadBudgetData();\n    \n    // Only reload indicators if backend is connected\n    if (this.backendConnected) {\n      await this.loadIndicatorsData();\n    }\n    \n    this.loading = false;\n  }\n\n  /**\n   * Handle category filter change\n   */\n  async onCategoryChange(category: string) {\n    this.selectedCategory = category;\n    this.selectedMinistry = '';\n    this.loading = true;\n    await this.loadBudgetData();\n    this.loading = false;\n  }\n\n  /**\n   * Handle ministry filter change\n   */\n  async onMinistryChange(ministry: string) {\n    this.selectedMinistry = ministry;\n    this.selectedCategory = '';\n    this.loading = true;\n    await this.loadBudgetData();\n    this.loading = false;\n  }\n\n  /**\n   * Handle indicator category filter change\n   */\n  async onIndicatorCategoryChange(category: string) {\n    this.selectedIndicatorCategory = category;\n    this.loading = true;\n    await this.loadIndicatorsData();\n    this.loading = false;\n  }\n\n  /**\n   * Clear all filters\n   */\n  async clearFilters() {\n    this.selectedCategory = '';\n    this.selectedMinistry = '';\n    this.selectedIndicatorCategory = '';\n    this.selectedYear = new Date().getFullYear();\n    this.loading = true;\n    await this.loadBudgetData();\n    \n    // Only reload indicators if backend is connected\n    if (this.backendConnected) {\n      await this.loadIndicatorsData();\n    }\n    \n    this.loading = false;\n  }\n\n  /**\n   * Get unique ministries from budget data\n   */\n  getUniqueMinistries(): string[] {\n    const ministries = [...new Set(this.budgetData.map(item => item.ministry))];\n    return ministries.filter(ministry => ministry && ministry.length > 0);\n  }\n\n  /**\n   * Calculate total budget amount\n   */\n  getTotalBudget(): number {\n    return this.budgetData.reduce((total, item) => total + (item.amount || 0), 0);\n  }\n\n  /**\n   * Get budget data grouped by category\n   */\n  getBudgetByCategory(): any[] {\n    const categoryGroups: { [key: string]: { name: string, total: number, count: number } } = {};\n    \n    this.budgetData.forEach(item => {\n      const categoryKey = item.category || 'other';\n      const categoryName = this.backendService.getCategoryDisplayName(categoryKey);\n      \n      if (!categoryGroups[categoryKey]) {\n        categoryGroups[categoryKey] = { name: categoryName, total: 0, count: 0 };\n      }\n      \n      categoryGroups[categoryKey].total += item.amount || 0;\n      categoryGroups[categoryKey].count += 1;\n    });\n    \n    return Object.keys(categoryGroups).map(key => ({\n      category: key,\n      ...categoryGroups[key]\n    })).sort((a, b) => b.total - a.total);\n  }\n\n  /**\n   * Get budget data grouped by ministry\n   */\n  getBudgetByMinistry(): any[] {\n    const ministryGroups: { [key: string]: { name: string, total: number, count: number } } = {};\n    \n    this.budgetData.forEach(item => {\n      const ministryKey = item.ministry || 'Unknown';\n      \n      if (!ministryGroups[ministryKey]) {\n        ministryGroups[ministryKey] = { name: ministryKey, total: 0, count: 0 };\n      }\n      \n      ministryGroups[ministryKey].total += item.amount || 0;\n      ministryGroups[ministryKey].count += 1;\n    });\n    \n    return Object.keys(ministryGroups).map(key => ({\n      ministry: key,\n      ...ministryGroups[key]\n    })).sort((a, b) => b.total - a.total);\n  }\n\n  /**\n   * Get total revenue amount\n   */\n  getTotalRevenue(): number {\n    return this.revenueData.reduce((sum, item) => sum + (item.amount || 0), 0);\n  }\n\n  /**\n   * Get total expenditure amount\n   */\n  getTotalExpenditure(): number {\n    return this.budgetData.reduce((sum, item) => sum + (item.amount || 0), 0);\n  }\n\n  /**\n   * Format currency for display\n   */\n  formatCurrency(amount: number): string {\n    return this.backendService.formatCurrency(amount);\n  }\n\n  /**\n   * Get percentage of total budget\n   */\n  getPercentageOfTotal(amount: number): string {\n    const total = this.getTotalBudget();\n    if (total === 0) return '0';\n    return ((amount / total) * 100).toFixed(1);\n  }\n\n  /**\n   * Get indicators grouped by category\n   */\n  getIndicatorsByCategory(): any[] {\n    const categoryGroups: { [key: string]: { name: string, indicators: IndicatorData[] } } = {};\n    \n    this.indicatorsData.forEach(indicator => {\n      const categoryKey = indicator.category || 'other';\n      const categoryName = this.getIndicatorCategoryDisplayName(categoryKey);\n      \n      if (!categoryGroups[categoryKey]) {\n        categoryGroups[categoryKey] = { name: categoryName, indicators: [] };\n      }\n      \n      categoryGroups[categoryKey].indicators.push(indicator);\n    });\n    \n    return Object.keys(categoryGroups).map(key => ({\n      category: key,\n      ...categoryGroups[key]\n    }));\n  }\n\n  /**\n   * Get indicator category display name in Mongolian\n   */\n  getIndicatorCategoryDisplayName(category: string): string {\n    const categoryNames = {\n      'economic': 'Эдийн засаг',\n      'social': 'Нийгэм',\n      'fiscal': 'Төсөв санхүү',\n      'environmental': 'Байгаль орчин',\n      'governance': 'Засаглал',\n      'other': 'Бусад'\n    };\n    \n    return categoryNames[category] || category;\n  }\n\n  /**\n   * Get indicator status icon\n   */\n  getIndicatorStatusIcon(status: string): string {\n    switch (status) {\n      case 'increase':\n        return '📈';\n      case 'decrease':\n        return '📉';\n      case 'stable':\n        return '➡️';\n      default:\n        return '📊';\n    }\n  }\n\n  /**\n   * Get indicator status color class\n   */\n  getIndicatorStatusClass(status: string): string {\n    switch (status) {\n      case 'increase':\n        return 'text-success';\n      case 'decrease':\n        return 'text-danger';\n      case 'stable':\n        return 'text-warning';\n      default:\n        return 'text-info';\n    }\n  }\n\n  /**\n   * Track function for ngFor performance optimization\n   */\n  trackByFn(index: number, item: BudgetData): any {\n    return item.id || index;\n  }\n\n  /**\n   * Track function for indicators ngFor performance optimization\n   */\n  trackIndicatorByFn(index: number, item: IndicatorData): any {\n    return item.id || index;\n  }\n\n  /**\n   * Math helper for templates\n   */\n  get Math() {\n    return Math;\n  }\n\n  /**\n   * Check if indicators section should be displayed\n   */\n  shouldShowIndicators(): boolean {\n    return this.backendConnected && this.indicatorsData.length > 0;\n  }\n}\n","<div class=\"budget-dashboard\">\n  <!-- Header -->\n  <div class=\"dashboard-header\">\n    <h1>\n      <i class=\"fas fa-chart-line\"></i>\n      Төсвийн мэдээллийн самбар\n    </h1>\n    <p class=\"subtitle\">NestJS Backend системээс авсан өгөгдөл</p>\n  </div>\n\n  <!-- Connection Status -->\n  <div class=\"connection-status\" [ngClass]=\"backendConnected ? 'connected' : 'disconnected'\">\n    <i class=\"fas\" [ngClass]=\"backendConnected ? 'fa-wifi' : 'fa-exclamation-triangle'\"></i>\n    <span *ngIf=\"backendConnected\">Backend серверт амжилттай холбогдсон</span>\n    <span *ngIf=\"!backendConnected\">Backend сервертэй холбогдож чадсангүй. Анхны өгөгдлийг ашиглаж байна.</span>\n  </div>\n\n  <div *ngIf=\"!backendConnected\" class=\"no-backend-message\">\n    <div class=\"alert alert-warning\">\n      <i class=\"fas fa-info-circle\"></i>\n      <strong>Backend сервер ажиллахгүй байна.</strong><br>\n      Backend серверийг эхлүүлнэ үү: <code>cd websan-backend && npm start</code>\n    </div>\n  </div>\n\n  <div *ngIf=\"backendConnected\">\n    <!-- Loading Spinner -->\n    <div *ngIf=\"loading\" class=\"loading-container\">\n      <div class=\"spinner\"></div>\n      <p>Өгөгдөл ачаалж байна...</p>\n    </div>\n\n    <div *ngIf=\"!loading\">\n      <!-- Dashboard Statistics -->\n      <div *ngIf=\"dashboardStats\" class=\"stats-container\">\n        <div class=\"stats-grid\">\n          <!-- Revenue Card -->\n          <div class=\"stat-card revenue-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-arrow-up\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ formatCurrency(getTotalRevenue()) }}</h3>\n              <p>Орлого</p>\n            </div>\n          </div>\n\n          <!-- Expenditure Card -->\n          <div class=\"stat-card expenditure-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-arrow-down\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ formatCurrency(getTotalExpenditure()) }}</h3>\n              <p>Зарлага</p>\n            </div>\n          </div>\n\n          <!-- Total Budget Card -->\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-money-bill-wave\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ formatCurrency(dashboardStats.totalBudget) }}</h3>\n              <p>Нийт төсөв</p>\n            </div>\n          </div>\n\n          <!-- Records Card -->\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <i class=\"fas fa-list\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ dashboardStats.totalRecords }}</h3>\n              <p>Төсвийн бичлэг</p>\n            </div>\n          </div>\n        </div>\n\n        <div *ngIf=\"dashboardStats.lastUpdate\" class=\"last-update\">\n          <i class=\"fas fa-clock\"></i>\n          Сүүлийн шинэчлэл: {{ dashboardStats.lastUpdate | date:'yyyy/MM/dd HH:mm' }}\n        </div>\n      </div>\n\n      <!-- Filters -->\n      <div class=\"filters-container\">\n        <h2>Шүүлтүүр</h2>\n        \n        <div class=\"filters-row\">\n          <!-- Year Filter -->\n          <div class=\"filter-group\">\n            <label for=\"year-select\">Он:</label>\n            <select id=\"year-select\" [(ngModel)]=\"selectedYear\" (change)=\"onYearChange(selectedYear)\">\n              <option *ngFor=\"let year of availableYears\" [value]=\"year\">{{ year }}</option>\n            </select>\n          </div>\n\n          <!-- Category Filter -->\n          <div class=\"filter-group\">\n            <label for=\"category-select\">Категори:</label>\n            <select id=\"category-select\" [(ngModel)]=\"selectedCategory\" (change)=\"onCategoryChange(selectedCategory)\">\n              <option value=\"\">Бүгд</option>\n              <option *ngFor=\"let category of availableCategories\" [value]=\"category.key\">\n                {{ category.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Ministry Filter -->\n          <div class=\"filter-group\">\n            <label for=\"ministry-select\">Яам:</label>\n            <select id=\"ministry-select\" [(ngModel)]=\"selectedMinistry\" (change)=\"onMinistryChange(selectedMinistry)\">\n              <option value=\"\">Бүгд</option>\n              <option *ngFor=\"let ministry of getUniqueMinistries()\" [value]=\"ministry\">\n                {{ ministry }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Clear Filters Button -->\n          <div class=\"filter-group\">\n            <button class=\"btn btn-secondary\" (click)=\"clearFilters()\">\n              <i class=\"fas fa-times\"></i>\n              Цэвэрлэх\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Indicators Section - Only show if backend is connected and has data -->\n      <div *ngIf=\"shouldShowIndicators()\" class=\"indicators-container\">\n        <div class=\"section-header\">\n          <h2>\n            <i class=\"fas fa-chart-line\"></i>\n            Эдийн засгийн үзүүлэлтүүд\n          </h2>\n          \n          <!-- Indicator Category Filter -->\n          <div class=\"indicator-filter\">\n            <label for=\"indicator-category-select\">Категори:</label>\n            <select id=\"indicator-category-select\" [(ngModel)]=\"selectedIndicatorCategory\" (change)=\"onIndicatorCategoryChange(selectedIndicatorCategory)\">\n              <option value=\"\">Бүгд</option>\n              <option *ngFor=\"let category of availableIndicatorCategories\" [value]=\"category.key\">\n                {{ category.name }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div *ngIf=\"indicatorsData.length === 0\" class=\"no-data\">\n          <i class=\"fas fa-chart-bar\"></i>\n          <p>Үзүүлэлтийн өгөгдөл олдсонгүй.</p>\n        </div>\n\n        <div *ngIf=\"indicatorsData.length > 0\">\n          <!-- Indicators Grid -->\n          <div class=\"indicators-grid\">\n            <div *ngFor=\"let indicator of indicatorsData; trackBy: trackIndicatorByFn\" \n                 class=\"indicator-card\"\n                 [ngClass]=\"getIndicatorStatusClass(indicator.status)\">\n              \n              <div class=\"indicator-header\">\n                <div class=\"indicator-icon\">\n                  {{ getIndicatorStatusIcon(indicator.status) }}\n                </div>\n                <div class=\"indicator-category\">\n                  {{ getIndicatorCategoryDisplayName(indicator.category) }}\n                </div>\n              </div>\n\n              <div class=\"indicator-content\">\n                <h3 class=\"indicator-name\">{{ indicator.name }}</h3>\n                \n                <div class=\"indicator-value\">\n                  <span class=\"current-value\">{{ indicator.value }}</span>\n                  <span class=\"unit\">{{ indicator.unit }}</span>\n                </div>\n\n                <div *ngIf=\"indicator.previousValue && indicator.changePercentage\" class=\"indicator-change\">\n                  <span class=\"previous-value\">\n                    Өмнөх: {{ indicator.previousValue }} {{ indicator.unit }}\n                  </span>\n                  <span class=\"change-percentage\" \n                        [ngClass]=\"indicator.changePercentage > 0 ? 'positive' : 'negative'\">\n                    {{ indicator.changePercentage > 0 ? '+' : '' }}{{ indicator.changePercentage }}%\n                  </span>\n                </div>\n\n                <div *ngIf=\"indicator.description\" class=\"indicator-description\">\n                  {{ indicator.description }}\n                </div>\n\n                <div class=\"indicator-meta\">\n                  <span class=\"indicator-year\">{{ indicator.year }} он</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Indicators by Category -->\n          <div *ngIf=\"!selectedIndicatorCategory\" class=\"indicators-by-category\">\n            <h3>Категориор ангилсан үзүүлэлтүүд</h3>\n            \n            <div *ngFor=\"let categoryGroup of getIndicatorsByCategory()\" class=\"category-group\">\n              <h4 class=\"category-title\">\n                <i class=\"fas fa-folder\"></i>\n                {{ categoryGroup.name }}\n                <span class=\"count\">({{ categoryGroup.indicators.length }})</span>\n              </h4>\n              \n              <div class=\"category-indicators\">\n                <div *ngFor=\"let indicator of categoryGroup.indicators\" class=\"mini-indicator\">\n                  <div class=\"mini-indicator-name\">{{ indicator.name }}</div>\n                  <div class=\"mini-indicator-value\">\n                    {{ indicator.value }} {{ indicator.unit }}\n                    <span *ngIf=\"indicator.changePercentage\" \n                          class=\"mini-change\" \n                          [ngClass]=\"indicator.changePercentage > 0 ? 'positive' : 'negative'\">\n                      {{ indicator.changePercentage > 0 ? '↗' : '↘' }} {{ Math.abs(indicator.changePercentage) }}%\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Budget Data Overview -->\n      <div class=\"budget-overview\">\n        <div class=\"overview-header\">\n          <h2>Төсвийн тойм</h2>\n          <div class=\"total-budget\">\n            <span class=\"label\">Нийт дүн:</span>\n            <span class=\"amount\">{{ formatCurrency(getTotalBudget()) }}</span>\n          </div>\n        </div>\n\n        <!-- Budget by Category Chart -->\n        <div class=\"chart-container\">\n          <h3>Категориор ангилсан</h3>\n          <div class=\"category-bars\">\n            <div *ngFor=\"let item of getBudgetByCategory()\" class=\"category-bar-item\">\n              <div class=\"category-info\">\n                <span class=\"category-name\">{{ item.name }}</span>\n                <span class=\"category-amount\">{{ formatCurrency(item.total) }}</span>\n                <span class=\"category-percentage\">({{ getPercentageOfTotal(item.total) }}%)</span>\n              </div>\n              <div class=\"progress-bar\">\n                <div class=\"progress-fill\" [style.width.%]=\"getPercentageOfTotal(item.total)\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Budget by Ministry Chart -->\n        <div class=\"chart-container\">\n          <h3>Яамаар ангилсан</h3>\n          <div class=\"ministry-bars\">\n            <div *ngFor=\"let item of getBudgetByMinistry()\" class=\"ministry-bar-item\">\n              <div class=\"ministry-info\">\n                <span class=\"ministry-name\">{{ item.name }}</span>\n                <span class=\"ministry-amount\">{{ formatCurrency(item.total) }}</span>\n                <span class=\"ministry-percentage\">({{ getPercentageOfTotal(item.total) }}%)</span>\n              </div>\n              <div class=\"progress-bar\">\n                <div class=\"progress-fill\" [style.width.%]=\"getPercentageOfTotal(item.total)\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Budget Data Table -->\n      <div class=\"budget-table-container\">\n        <h2>Төсвийн мэдээлэл</h2>\n        \n        <div *ngIf=\"budgetData.length === 0\" class=\"no-data\">\n          <i class=\"fas fa-inbox\"></i>\n          <p>Шүүлтэд тохирох өгөгдөл олдсонгүй.</p>\n        </div>\n\n        <div *ngIf=\"budgetData.length > 0\" class=\"table-responsive\">\n          <table class=\"budget-table\">\n            <thead>\n              <tr>\n                <th>Яам</th>\n                <th>Хэлтэс</th>\n                <th>Он</th>\n                <th>Категори</th>\n                <th>Төрөл</th>\n                <th>Дүн</th>\n                <th>Тайлбар</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of budgetData; trackBy: trackByFn\">\n                <td>{{ item.ministry }}</td>\n                <td>{{ item.department }}</td>\n                <td>{{ item.year }}</td>\n                <td>\n                  <span class=\"category-tag\" [attr.data-category]=\"item.category\">\n                    {{ backendService.getCategoryDisplayName(item.category) }}\n                  </span>\n                </td>\n                <td>{{ item.type }}</td>\n                <td class=\"amount\">{{ formatCurrency(item.amount) }}</td>\n                <td class=\"description\">{{ item.description || '-' }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BudgetDashboardComponent } from './budget-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BudgetDashboardComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    BudgetDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class BudgetDashboardModule { }\n"],"sourceRoot":"webpack:///"}