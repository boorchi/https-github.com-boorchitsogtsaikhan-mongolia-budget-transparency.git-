{"version":3,"sources":["webpack:///src/app/pages/survey/dis-list/dis-list.component.ts","webpack:///src/app/pages/survey/dis-list/dis-list.component.html","webpack:///src/app/pages/survey/dis-show/dis-show.component.ts","webpack:///src/app/pages/survey/dis-show/dis-show.component.html","webpack:///src/app/pages/survey/form/form.component.ts","webpack:///src/app/pages/survey/form/form.component.html","webpack:///src/app/pages/survey/survey.component.ts","webpack:///src/app/pages/survey/survey.component.html","webpack:///src/app/pages/survey/survey.module.ts","webpack:///src/app/services/custome.pipe.ts"],"names":["DisListComponent","mainService","route","sanitizer","discussions","ngOnInit","baseGet","HOST","then","result","error","console","log","selector","templateUrl","styleUrls","DisShowComponent","discussion","commentData","comment","email","name","discussion_id","id","comments","queryParams","subscribe","params","iframe","bypassSecurityTrustResourceUrl","PATH","imageUrl","getComments","sendComment","basePost","FormComponent","survey","bypassSecurityTrustHtml","embed","SurveyComponent","surveys","routes","path","component","SurveyModule","forChild","declarations","imports","CustomPipe","transform","content"],"mappings":"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","file":"pages-survey-survey-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Constants } from 'src/app/services/constants';\nimport { MainService } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-dis-list',\n  templateUrl: './dis-list.component.html',\n  styleUrls: ['./dis-list.component.scss']\n})\nexport class DisListComponent implements OnInit {\n\n  discussions: any = []\n  iframe: any\n  constructor(private mainService: MainService, private route: ActivatedRoute, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    \n    this.mainService.baseGet(Constants.HOST + \"websan/api/discussions\", null, true).then((result: any) => {\n      if (result) {\n        this.discussions = result\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n    // this.route.queryParams.subscribe(params => {\n    //   if(params.id){\n    //     this.mainService.baseGet(Constants.HOST + \"websan/api/survey\" + \"?id=\" + params.id, null, true).then((result: any) => {\n    //       if(result){\n    //         this.survey = result\n    //         this.iframe = this.sanitizer.bypassSecurityTrustHtml(result.embed);\n    //       }\n    //     }).catch((error) => {\n    //       console.log(error);\n    //     });\n    //   }\n    // })\n  }\n\n\n}\n","<div class=\"budget-outlet\" style=\"min-height: 500px;\">\n    <module-menu [menuType]=\"'survey'\" [activeMenu]=\"'discussions'\"></module-menu>\n    <div class=\"budget-body\">\n        <div class=\"news-content\">\n            <div class=\"layout layout-4\">\n                <div class=\"container\">\n                    <h4 class=\"title center\" style=\"margin-bottom: 30px;\">Хэлэлцүүлэг</h4>\n                    <div class=\"row\" *ngIf=\"discussions.length > 0\">\n                        <!-- <div class=\"col-md-3 col-sm-6\" *ngFor='let item of discussions; let i = index' >         \n                                \n                                    <div class=\"main-menu\">\n                                        <a routerLink=\"/cp/discussion\" [queryParams]=\"{id: item.id}\">\n                                        <div class=\"survey-head\">{{item.name}}</div>\n                                        <div class=\"survey-body\"><div [innerHTML]=\"item.description\"></div></div>\n                                    </a>\n                                    </div>\n                                \n                            </div> -->\n                        <div class=\"long-item\" *ngFor='let item of discussions; let i = index'>\n                            <div class=\"content row\" routerLink=\"/cp/discussion\" [queryParams]=\"{id: item.id}\">\n                                <div  class=\"col-10\">\n                                    <h5>{{item.name}}</h5>\n                                    <div [innerHTML]=\"item.description\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"title-hd center\"  *ngIf=\"discussions.length == 0\"><b>Хэлэлцүүлэг байхгүй байна...</b></div> \n                    <div class=\"no_data_search\"  *ngIf=\"discussions.length == 0\">                  \n                        <div class=\"image\">\n                        \n                            <img src=\"../../assets/image/404.png\" />                \n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Constants } from 'src/app/services/constants';\nimport { MainService } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-dis-show',\n  templateUrl: './dis-show.component.html',\n  styleUrls: ['./dis-show.component.scss']\n})\nexport class DisShowComponent implements OnInit {\n\n  \n  discussion: any = {}\n  iframe: any\n  commentData: any = {\n    comment: '',\n    email: '',\n    name: '',\n    discussion_id: '',\n  }\n  id: any = ''\n  comments: any = []\n  constructor(private mainService: MainService, private route: ActivatedRoute, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    \n    this.route.queryParams.subscribe(params => {\n      if(params.id){\n        this.commentData.discussion_id = params.id\n        this.mainService.baseGet(Constants.HOST + \"websan/api/discussion\" + \"?id=\" + params.id, null, true).then((result: any) => {\n          if(result){\n            this.discussion = result\n            this.iframe = this.sanitizer.bypassSecurityTrustResourceUrl(Constants.PATH + result.imageUrl);\n            this.getComments(params.id)\n            this.id = params.id\n          }\n        }).catch((error) => {\n          console.log(error);\n        });\n      }\n    })\n  }\n\n  sendComment(){\n    if(this.id){\n      this.mainService.basePost(Constants.HOST + \"websan/api/sendComment\", this.commentData).then((result: any) => {\n        this.getComments(this.id)\n      }).catch((error) => {\n        console.log(error);\n      });\n    }\n    \n  }\n\n  getComments(id: any){\n    this.mainService.baseGet(Constants.HOST + \"websan/api/getComment\" + \"?id=\" + id, null, true).then((result: any) => {\n          this.comments = result\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"budget-outlet\"  style=\"min-height: 500px;\">\n    <module-menu [menuType]=\"'survey'\" [activeMenu]=\"'discussions'\"></module-menu>\n    <div class=\"budget-body\">\n        <div class=\"container\">\n            <h4 class=\"title center\">{{discussion.name}}</h4>\n            <div class=\"center desc\">\n                <div [innerHTML]=\"discussion.description\"></div>\n            </div>\n            \n            <div class=\"col-md-12\" >\n                <div class=\"survey\" style=\"margin: 0px auto; display: inline;\" *ngIf=\"iframe\">\n                    <iframe [src]=\"iframe\" width=\"100%\" height=\"600px\"></iframe>\n                </div>\n                    <h4>Ирсэн санал</h4>\n                    <div class=\"comments\" >\n                        <div class=\"row\" style=\"max-height: 800px; overflow-y: auto\">\n                            <div class=\"col-lg-12\">\n                                <div class=\"long-item\" *ngFor='let comment of comments; let i = index'>\n                                    <div class=\"content row\"  >\n                                        <div class=\"col-md-12\">\n                                            <div class=\"tags\">\n                                                <span class=\"badge badge-success\" style=\"margin-right: 10px;\"><b>{{comment.name}}</b></span>  \n                                                <span class=\"badge badge-light\">огноо: <b>{{comment.createDate}}</b></span>                              \n                                            </div>\n                                            <p>{{comment.comment}}</p>\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <hr>\n                    <h4>Санал хүсэлт оруулах :</h4>\n\n                    <form style=\"text-align: left\">\n                        <label for=\"name\">Нэр :</label> <input type=\"text\" name=\"name\" value=\"\"\n                            class=\"form-control form-control-lg\" size=\"50\" [(ngModel)]=\"commentData.name\"><br>\n                        <label for=\"email\">Имэйл :</label> <input type=\"text\" name=\"email\"\n                            class=\"form-control form-control-lg\" value=\"\" size=\"50\" [(ngModel)]=\"commentData.email\"><br>\n\n                        <label for=\"comment\">Санал:</label><br>\n                        <textarea name=\"comment\" cols=\"70\" class=\"form-control form-control-lg\" rows=\"5\" [(ngModel)]=\"commentData.comment\"></textarea><br>\n\n\n                        <br><input type=\"button\" name=\"submit\" value=\"Илгээх\" (click)=\"sendComment()\">\n                    </form>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Constants } from 'src/app/services/constants';\nimport { MainService } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  survey: any = {}\n  iframe: any\n  constructor(private mainService: MainService, private route: ActivatedRoute, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    \n    this.route.queryParams.subscribe(params => {\n      if(params.id){\n        this.mainService.baseGet(Constants.HOST + \"websan/api/survey\" + \"?id=\" + params.id, null, true).then((result: any) => {\n          if(result){\n            this.survey = result\n            this.iframe = this.sanitizer.bypassSecurityTrustHtml(result.embed);\n          }\n        }).catch((error) => {\n          console.log(error);\n        });\n      }\n    })\n  }\n\n\n}\n","<div class=\"budget-outlet\"  style=\"min-height: 500px;\">\n    <module-menu [menuType]=\"'survey'\"  [activeMenu]=\"'survey'\"></module-menu>\n    <div class=\"budget-body\">\n        <div class=\"container\">\n            <h4 class=\"title center\">{{survey.name}}</h4>\n            <div class=\"center desc\">\n                <div [innerHTML]=\"survey.description\"></div>\n            </div>\n                <div class=\"col-md-12\" style=\"text-align:center\">\n                <div class=\"survey\" style=\"margin: 0px auto; display: inline;\" *ngIf=\"iframe\">\n                    <div [innerHTML]=\"iframe\"></div>\n                </div>\n                \n            </div>\n\n            </div>\n\n        </div>\n\n    </div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { param } from 'jquery';\nimport { Constants } from 'src/app/services/constants';\nimport { MainService } from 'src/app/services/main.service';\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.scss']\n})\nexport class SurveyComponent implements OnInit {\n\n  surveys: any = []\n  \n  constructor(private mainService: MainService, private route: ActivatedRoute, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    this.mainService.baseGet(Constants.HOST + \"websan/api/surveys\", null, true).then((result: any) => {\n      if (result) {\n        this.surveys = result\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n\n  }\n\n}\n","<div class=\"budget-outlet\" style=\"min-height: 500px;\">\n    <module-menu [menuType]=\"'survey'\" [activeMenu]=\"'survey'\"></module-menu>\n    <div class=\"budget-body\">\n        <div class=\"news-content\">\n            <div class=\"layout layout-4\">\n                <div class=\"container\">\n                    <h4 class=\"title center\" style=\"margin-bottom: 30px;\">Санал асуулга</h4>\n                    <div class=\"row\" *ngIf=\"surveys\">\n                        <div class=\"long-item\" *ngFor='let item of surveys; let i = index'>\n                            <div class=\"content row\" routerLink=\"/cp/survey\" [queryParams]=\"{id: item.id}\">\n                                <div  class=\"col-10\">\n                                    <h5>{{item.name}}</h5>\n                                    <div [innerHTML]=\"item.description\"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"title-hd center\"  *ngIf=\"surveys.length == 0\"><b>Санал асуулга байхгүй байна...</b></div> \n                    <div class=\"no_data_search\"  *ngIf=\"surveys.length == 0\">                  \n                        <div class=\"image\">\n                            \n                            <img src=\"../../assets/image/404.png\" />                \n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SurveyComponent } from './survey.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MenuModule } from 'src/app/modules/menu/menu.module';\nimport { FooterModule } from '../footer/footer.module';\nimport { CustomPipe } from 'src/app/services/custome.pipe';\nimport { FormComponent } from './form/form.component';\nimport { DisListComponent } from './dis-list/dis-list.component';\nimport { DisShowComponent } from './dis-show/dis-show.component';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SurveyComponent\n  },\n  {\n    path: 'survey',\n    component: FormComponent\n  },\n  {\n    path: 'discussions',\n    component: DisListComponent\n  },\n  {\n    path: 'discussion',\n    component: DisShowComponent\n  },\n];\n\n@NgModule({\n  declarations: [SurveyComponent, CustomPipe, FormComponent, DisListComponent, DisShowComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MenuModule,\n    FooterModule,\n    FormsModule\n  ]\n})\nexport class SurveyModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml'})\nexport class CustomPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {\n    }\n  \n    transform(content) {\n      return this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n}"]}